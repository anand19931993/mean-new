{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/components/layout/footer/footer.component.ts","webpack:///src/app/components/layout/footer/footer.component.html","webpack:///src/app/components/layout/header/header.component.html","webpack:///src/app/components/layout/header/header.component.ts","webpack:///src/app/components/layout/top/top.component.ts","webpack:///src/app/components/layout/top/top.component.html","webpack:///src/app/components/page/edit-page/edit-page.component.ts","webpack:///src/app/components/page/edit-page/edit-page.component.html","webpack:///src/app/components/page/my-post/my-post.component.ts","webpack:///src/app/components/page/my-post/my-post.component.html","webpack:///src/app/components/page/post-add/post-add.component.ts","webpack:///src/app/components/page/post-add/post-add.component.html","webpack:///src/app/components/pages/home/home.component.ts","webpack:///src/app/components/pages/home/home.component.html","webpack:///src/app/components/pages/login/login.component.ts","webpack:///src/app/components/pages/login/login.component.html","webpack:///src/app/components/pages/page-not-found/page-not-found.component.ts","webpack:///src/app/components/pages/page-not-found/page-not-found.component.html","webpack:///src/app/components/pages/posts/posts.component.ts","webpack:///src/app/components/pages/posts/posts.component.html","webpack:///src/app/components/pages/register/register.component.ts","webpack:///src/app/components/pages/register/register.component.html","webpack:///src/app/components/pages/single-post/single-post.component.ts","webpack:///src/app/components/pages/single-post/single-post.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/post.service.ts","webpack:///src/app/services/token-interceptor.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","auth","router","authenticateUser","navigateByUrl","providedIn","FooterComponent","HeaderComponent","toast","email","getLoggedInName","subscribe","name","changeName","getToken","currentUser","user","console","log","logoutUser","success","TopComponent","faCaretRight","EditPageComponent","post","activatedRoute","fileToUpload","description","userId","postId","onSubmit","f","data","form","value","fd","FormData","append","updatePost","pp","error","_id","snapshot","paramMap","get","getSinglePost","po","event","target","files","handleFileInput","MyPostComponent","allPosts","count","picUrl","api_url","faEdit","faTrash","delPost","postIdNew","getMyPosts","posts","PostAddComponent","token","createPost","tt","HomeComponent","getAllPost","map","getAuthor","pipe","res","LoginComponent","password","loginUser","localStorage","setItem","JSON","stringify","resetForm","navigate","PageNotFoundComponent","PostsComponent","RegisterComponent","cpassword","length","registerUser","SinglePostComponent","postService","postContent","AuthService","http","regurl","logurl","next","parse","getItem","getUser","removeItem","PostService","allposts","singlePostUrl","createUrl","newUser","newSinglePost","mainUrl","put","TokenInterceptorService","newToken","clone","setHeaders","Authorization","handle","err","status","location","reload","message","statusText","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { RegisterComponent } from './components/pages/register/register.component';\nimport { HomeComponent } from './components/pages/home/home.component';\nimport { AuthGuard } from './auth.guard';\nimport { PageNotFoundComponent } from './components/pages/page-not-found/page-not-found.component';\nimport { SinglePostComponent } from './components/pages/single-post/single-post.component';\nimport { PostAddComponent } from './components/page/post-add/post-add.component';\nimport { MyPostComponent } from './components/page/my-post/my-post.component';\nimport { EditPageComponent } from './components/page/edit-page/edit-page.component';\n\n\nconst routes: Routes = [\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'register',\n    component:RegisterComponent\n  },\n  {\n    path:'',\n    component:HomeComponent,\n    canActivate:[AuthGuard]\n  },{\n    path:'post/:id',\n    component:SinglePostComponent,\n    canActivate:[AuthGuard]\n  },{\n    path:'create/post',\n    component:PostAddComponent,\n    canActivate:[AuthGuard]\n  },{\n    path:'myposts',\n    component:MyPostComponent,\n    canActivate:[AuthGuard]\n  },{\n    path:'edit-post/:id',\n    component:EditPageComponent,\n    canActivate:[AuthGuard]\n  },\n  {\n    path:'**',\n    component:PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'blog-auth';\n}\n","<div id=\"wrapper\">\n<app-top></app-top>\n<div id=\"content-wrapper\" class=\"d-flex flex-column\">\n<div id=\"content\">\n<app-header></app-header>\n<router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n</div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/layout/header/header.component';\nimport { FooterComponent } from './components/layout/footer/footer.component';\nimport { HomeComponent } from './components/pages/home/home.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { RegisterComponent } from './components/pages/register/register.component';\nimport { PostsComponent } from './components/pages/posts/posts.component';\nimport { PageNotFoundComponent } from './components/pages/page-not-found/page-not-found.component';\nimport { TopComponent } from './components/layout/top/top.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { SinglePostComponent } from './components/pages/single-post/single-post.component';\nimport { PostAddComponent } from './components/page/post-add/post-add.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MyPostComponent } from './components/page/my-post/my-post.component';\nimport { EditPageComponent } from './components/page/edit-page/edit-page.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    PostsComponent,\n    PageNotFoundComponent,\n    TopComponent,\n    SinglePostComponent,\n    PostAddComponent,\n    MyPostComponent,\n    EditPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(),\n    HttpClientModule,\n    FormsModule,\n    FontAwesomeModule\n  ],\n  providers: [AuthGuard,{\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorService,\n    multi:true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n    ) {\n    \n    }\n\n  canActivate(){\n   if(this.auth.authenticateUser()){\n     return true;\n   }else{\n     this.router.navigateByUrl(\"login\");\n     return false;\n   }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<footer class=\"sticky-footer text-dark text-center\">\n    <div class=\"container my-auto\">\n      <div class=\"copyright text-center my-auto\">\n        <span>Copyright &copy; Your Website 2020</span>\n      </div>\n    </div>\n  </footer>\n\n","    <!-- Topbar -->\n        <nav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\"  *ngIf=\"currentUser\">\n\n          <!-- Sidebar Toggle (Topbar) -->\n          <button id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\">\n            <i class=\"fa fa-bars\"></i>\n          </button>\n\n\n          <!-- Topbar Navbar -->\n          <ul class=\"navbar-nav ml-auto\" >\n            <div class=\"topbar-divider d-none d-sm-block\"></div>\n           \n            <!-- Nav Item - User Information -->\n            <li class=\"nav-item dropdown no-arrow\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <span class=\"mr-2 d-none d-lg-inline text-gray-600 small\" >Hello! {{ currentUser  }}</span>\n                <img class=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\">\n              </a>\n              <!-- Dropdown - User Information -->\n              <div class=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                <a class=\"dropdown-item\" href=\"#\">\n                  <i class=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n                  Profile\n                </a>\n                \n                <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item\" href=\"#\" (click)=\"logoutHandle()\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n                  <i class=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n                  Logout\n                </a>\n              </div>\n            </li>\n\n          </ul>\n\n        </nav>\n        <!-- End of Topbar -->\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\n@Input()\nexport class HeaderComponent implements OnInit {\n  email=null;\n  currentUser;\n  constructor(\n    private auth: AuthService,\n    private toast: ToastrService,\n    private router: Router,\n  ) {\n    if(auth.getLoggedInName){\n      auth.getLoggedInName.subscribe((name) =>\n      {\n      this.changeName(name);\n     }\n      );\n    }\n    if(auth.getToken()){\n      this.currentUser=auth.getToken().user.email;\n    }\n      \n    \n   \n   }\n   private changeName(name): void {\n    this.currentUser = name;\n    console.log(\"jjjj\",this.currentUser)\n }\n\n  ngOnInit(): void {\n    \n  }\n \n\n\n  async logoutHandle(){\n    try{\n      await this.auth.logoutUser();\n        this.email = null;\n        this.router.navigateByUrl(\"/login\");\n        this.toast.success(\"You have been logged out!\")\n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-top',\n  templateUrl: './top.component.html',\n  styleUrls: ['./top.component.css']\n})\nexport class TopComponent implements OnInit {\n  currentUser = null;\n  faCaretRight = faCaretRight;\n  constructor(\n    private auth: AuthService\n  ) {\n    if(auth.getLoggedInName){\n      auth.getLoggedInName.subscribe((name) =>\n      {\n      this.changeName(name);\n      console.log(\"name\",name);\n     }\n      );\n    }\n    if(auth.getToken()){\n      this.currentUser=auth.getToken().user.email;\n      console.log(\"emm\",this.currentUser);\n    }\n      \n    \n   \n   }\n   private changeName(name): void {\n    this.currentUser = name;\n    console.log(\"jjjj\",this.currentUser)\n }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <!-- Sidebar -->\n <ul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\" *ngIf=\"currentUser\">\n\n    <!-- Sidebar - Brand -->\n    <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n      <div class=\"sidebar-brand-icon rotate-n-15\">\n        <i class=\"fas fa-laugh-wink\"></i>\n      </div>\n      <div class=\"sidebar-brand-text mx-3\">BLOG AUTH</div>\n    </a>\n\n    <!-- Divider -->\n    <hr class=\"sidebar-divider my-0\">\n\n    <!-- Nav Item - Dashboard -->\n    <li class=\"nav-item active\">\n      <a class=\"nav-link\" href=\"index.html\">\n        <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n        <span>Dashboard</span></a>\n    </li>\n\n    <!-- Divider -->\n    <hr class=\"sidebar-divider\">\n\n    <!-- Heading -->\n    <div class=\"sidebar-heading\">\n      Interface\n    </div>\n\n    <!-- Nav Item - Pages Collapse Menu -->\n    <li class=\"nav-item\">\n      <a class=\"nav-link collapsed\"  data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n         <span>Posts</span> <span id=\"sideIcon\"><fa-icon [icon]=\"faCaretRight\"></fa-icon></span>\n      </a>\n      <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n        <div class=\"bg-white py-2 collapse-inner rounded\">\n          <a class=\"collapse-item\" [routerLink]='[\"/create/post\"]' routerLinkActive=\"active\">Add Post</a>\n          <a class=\"collapse-item\" [routerLink]=\"['/myposts']\" routerLinkActive=\"active\">My Posts</a>\n        </div>\n      </div>\n    </li>\n\n   \n    <!-- Divider -->\n    <hr class=\"sidebar-divider d-none d-md-block\">\n\n\n  </ul>\n  <!-- End of Sidebar -->","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PostService } from 'src/app/services/post.service';\nimport { ActivatedRoute, Router, RouteReuseStrategy } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-page',\n  templateUrl: './edit-page.component.html',\n  styleUrls: ['./edit-page.component.css']\n})\nexport class EditPageComponent implements OnInit {\n  fileToUpload= null;\n  title = null;\n  description = null;\n  userId = null;\n  postId = null;\n\n  constructor(\n    private post: PostService,\n    private auth: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private toast: ToastrService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n      this.userId = this.auth.getToken().user._id;\n      this.postId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.post.getSinglePost(this.postId).subscribe((po)=>{\n      this.title = po.title;\n      this.description = po.description;\n    })\n  }\n  \n  handleFileInput(event) {\n    this.fileToUpload = event.target.files[0];\n }\n\n\n  onSubmit = (f:NgForm) => {\n    let data = f.form.value;\n    const fd = new FormData;\n    if(this.fileToUpload != null){\n      fd.append(\"picture\",this.fileToUpload,this.fileToUpload.name);\n    }\n     if(data.title != ''){\n      fd.append(\"title\",data.title);\n     }\n     if(data.description != ''){\n      fd.append(\"title\",data.description);\n     }\n      \n      this.post.updatePost(fd,this.userId,this.postId).subscribe((pp)=>{\n         this.toast.success(\"Post has been updated!\");\n         this.router.navigateByUrl(\"/myposts\")\n      },(error)=>{\n        return this.toast.error(\"Something went wrong!\")\n      })\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info text-white\">\n                    Add New Post\n                </div>\n                <div class=\"card-body\">\n                    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" enctype=\"multipart/form-data\">\n                        <div class=\"alert alert-warning\" role=\"alert\">\n                            <b>Note:</b> Keep image empty if don't wanna change.\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Picture</label>\n                            <input type=\"file\" id=\"customFile\" name=\"files\"  (change)=\"handleFileInput($event)\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Title</label>\n                            <input type=\"text\" class=\"form-control\" name=\"title\" ngModel placeholder=\"title\" \n                            value=\"{{title}}\"\n                            />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Description</label>\n                            <input type=\"text\" class=\"form-control\" name=\"description\" ngModel placeholder=\"description\" \n                            value=\"{{description}}\"\n                            />\n                        </div>\n                        <div class=\"form-group\">\n                            <button type=\"submit\" class=\"btn btn-primary btn-block\">UPDATE POST</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { environment } from 'src/environments/environment';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-my-post',\n  templateUrl: './my-post.component.html',\n  styleUrls: ['./my-post.component.css']\n})\nexport class MyPostComponent implements OnInit {\nallPosts = [];\nuserId = null;\ncount = 0;\npicUrl = `${environment.api_url}/post/photo/`;\nfaEdit = faEdit\nfaTrash = faTrash\n\n  constructor(\n    private post: PostService,\n    private auth: AuthService,\n    private toast: ToastrService,\n    private router: Router\n  ) {\n    if(this.auth.getToken()){\n      this.userId = this.auth.getToken().user._id;\n      this.post.getMyPosts(this.userId).subscribe((posts)=>{\n         this.allPosts = posts;\n         this.count = this.count+1;\n      })\n    }\n   }\n\n  ngOnInit(): void {\n    \n  }\n\n  delPost = (postIdNew) => {\n    this.post.delPost(this.userId,postIdNew).subscribe((pp)=>{\n     this.toast.success(\"Post has been deleted!\")\n     this.router.navigateByUrl(\"/\")\n    })\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-4\" *ngFor=\"let post of allPosts\" >\n          \n            <div class=\"card\">\n                <div class=\"card-header bg-info text-white\">\n                    {{post.title}}\n                <span style=\"cursor: pointer;margin-left:10px\" routerLink=\"/edit-post/{{post._id}}\" class=\"float-right\"><fa-icon [icon]=\"faEdit\"></fa-icon></span>\n                <span style=\"cursor: pointer;\" (click)=\"delPost(post._id)\" class=\"float-right\"><fa-icon [icon]=\"faTrash\"></fa-icon></span>\n                </div>\n                <div class=\"card-body\"  style=\"cursor: pointer;\"  routerLink=\"/post/{{post._id}}\">\n                    <img src=\"{{picUrl}}{{post._id}}\" class=\"postImg\" />\n                </div>\n                \n                <div class=\"card-footer  bg-info text-white\">\n                    <div class=\"float-left author\">\n                        Posted-{{post.createdAt | date}}\n                    </div>\n                    <div class=\"float-right author\">\n                        Author-Yous\n                    </div>\n                </div>\n            </div>\n              \n        </div>\n        <div class=\"col-md-12 text-center\" *ngIf=\"count == 0\">\n            <div class=\"text-center\">\n                <img class=\"card-img-top\" style=\"width:60%\" src=\"./../../../../assets/img/nopost.png\" alt=\"\">\n            </div>\n        </div>\n       \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NgForm, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-post-add',\n  templateUrl: './post-add.component.html',\n  styleUrls: ['./post-add.component.css']\n})\nexport class PostAddComponent implements OnInit {\n  user = null;\n  fileToUpload= null;\n\n  constructor(\n    private auth: AuthService,\n    private post: PostService,\n    private router: Router,\n    private toast: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.user = this.auth.getToken();\n  }\n\n  handleFileInput(event) {\n   this.fileToUpload = event.target.files[0];\n}\n\n\n  onSubmit = (f:NgForm) => {\n    const token = this.user.token;\n    const userId = this.user.user?._id;\n    let data = f.form.value;\n    const fd = new FormData;\n    fd.append(\"picture\",this.fileToUpload,this.fileToUpload.name);\n    fd.append(\"title\",data.title);\n    fd.append(\"description\",data.description);\n    this.post.createPost(fd,token,userId).subscribe((tt)=>{\n      return this.toast.success(\"Post has been added.\")\n    },(error)=>{\n      return this.toast.error(\"SOmething went wrong!\")\n    })\n\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info text-white\">\n                    Add New Post\n                </div>\n                <div class=\"card-body\">\n                    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" enctype=\"multipart/form-data\">\n                        <div class=\"form-group\">\n                            <label>Picture</label>\n                            <input type=\"file\" id=\"customFile\" name=\"files\"  (change)=\"handleFileInput($event)\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Title</label>\n                            <input type=\"text\" class=\"form-control\" name=\"title\" ngModel placeholder=\"title\" />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Description</label>\n                            <input type=\"text\" class=\"form-control\" name=\"description\" ngModel placeholder=\"description\" />\n                        </div>\n                        <div class=\"form-group\">\n                            <button type=\"submit\" class=\"btn btn-primary btn-block\">ADD POST</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n    constructor(\n    private router: Router,\n    private post: PostService\n  ) { }\n  allPosts = [];\n  count=0;\n  picUrl = `${environment.api_url}/post/photo/`;\n  ngOnInit(): void {\n    this.post.getAllPost().subscribe((posts)=>{\n      // this.allPosts = posts;\n      posts.map((po)=>{\n        this.post.getAuthor(po.user).pipe(\n          map((res)=>{\n            this.allPosts = posts;\n            this.count = this.count+1;\n          })\n        ).subscribe()\n      })\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-4\" *ngFor=\"let post of allPosts\" >\n          <a routerLink=\"/post/{{post._id}}\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info text-white\">\n                    {{post.title}}\n                </div>\n                <div class=\"card-body\">\n                    <img src=\"{{picUrl}}{{post._id}}\" class=\"postImg\" />\n                </div>\n                <div class=\"card-footer  bg-info text-white\">\n                    <div class=\"float-left author\">\n                        Posted-{{post.createdAt | date}}\n                    </div>\n                    <div class=\"float-right author\">\n                        Author-{{post.author}}\n                    </div>\n                </div>\n            </div>\n               </a>\n\n              \n        </div>\n        <div class=\"col-md-12 text-center\" *ngIf=\"count == 0\">\n            <div class=\"text-center\">\n                <img class=\"card-img-top\" style=\"width:60%\" src=\"./../../../../assets/img/nopost.png\" alt=\"\">\n            </div>\n        </div>\n       \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private auth: AuthService,\n    private toast: ToastrService\n  ) {\n    if(this.auth.authenticateUser()){\n       this.router.navigate[\"/\"];\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit = (f:NgForm) =>{\n    const {email,password} = f.form.value;\n    if(email == '' || password == ''){\n      return this.toast.error(\"Fields cannot be empty!\")\n    }\n    this.auth.loginUser(f.form.value).subscribe((user)=>{\n      localStorage.setItem(\"token\",JSON.stringify(user));\n      f.resetForm();\n      this.router.navigate([\"\"]);\n      this.toast.success(\"Login successful!\");\n    },(error)=>{\n      console.log(error);\n      this.toast.error(error.error.error);\n    })\n  }\n\n}\n","<div class=\"container\">\n\n    <!-- Outer Row -->\n    <div class=\"row justify-content-center\">\n\n      <div class=\"col-xl-10 col-lg-12 col-md-9\">\n\n        <div class=\"card o-hidden border-0 shadow-lg my-5\">\n          <div class=\"card-body p-0\">\n            <!-- Nested Row within Card Body -->\n            <div class=\"row\">\n              <div class=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n              <div class=\"col-lg-6\">\n                <div class=\"p-5\">\n                  <div class=\"text-center\">\n                    <h1 class=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\n                  </div>\n                  <form class=\"user\" (ngSubmit)=\"onSubmit(f)\" #f=ngForm>\n                    <div class=\"form-group\">\n                      <input type=\"email\" ngModel name=\"email\" class=\"form-control form-control-user\" id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email Address...\">\n                    </div>\n                    <div class=\"form-group\">\n                      <input type=\"password\" ngModel name=\"password\" class=\"form-control form-control-user\" id=\"exampleInputPassword\" placeholder=\"Password\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary btn-user btn-block\">\n                      Login\n                    </button>\n                   \n                  </form>\n                  <hr>\n                  <div class=\"text-center\">\n                    <a class=\"small\"  [routerLink]='[\"/register\"]'>Create an Account!</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>posts works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private toast: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit = (f:NgForm) =>{\n    const {password,cpassword} = f.form.value;\n    if(password !== cpassword){\n       return this.toast.error(\"Password does not match with confirm password!\");\n    } \n\n    if(password.length < 6 ){\n      return this.toast.error(\"Password should be atleast 6 characters long!\");\n    }\n\n    this.auth.registerUser(f.form.value).subscribe((user)=>{\n      return this.toast.success(`Account of ${user.name} has been created.`)\n    },(error)=>{\n      f.resetForm();\n      return this.toast.error(error.error.error)\n\n    }\n    )\n\n  }\n\n}\n","<div class=\"container\">\n\n    <div class=\"card o-hidden border-0 shadow-lg my-5\">\n      <div class=\"card-body p-0\">\n        <!-- Nested Row within Card Body -->\n        <div class=\"row\">\n          <div class=\"col-lg-5 d-none d-lg-block bg-register-image\"></div>\n          <div class=\"col-lg-7\">\n            <div class=\"p-5\">\n              <div class=\"text-center\">\n                <h1 class=\"h4 text-gray-900 mb-4\">Create an Account!</h1>\n              </div>\n              <form class=\"user\" (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n                      <label>Full Name</label>\n                    <input type=\"text\" ngModel name=\"name\" class=\"form-control form-control-user\" id=\"exampleFirstName\" placeholder=\"Full Name\">\n                  </div>\n                  <div class=\"col-sm-6\">\n                      <label>Date Of Birth</label>\n                    <input type=\"date\" ngModel name=\"DOB\" class=\"form-control form-control-user\" id=\"exampleLastName\" placeholder=\"DOB\">\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Email Address</label>\n                  <input type=\"email\" ngModel name=\"email\" class=\"form-control form-control-user\" id=\"exampleInputEmail\" placeholder=\"Email Address\">\n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n                      <label>Password</label>\n                    <input type=\"password\" ngModel name=\"password\" class=\"form-control form-control-user\" id=\"exampleInputPassword\" placeholder=\"Password\">\n                  </div>\n                  <div class=\"col-sm-6\">\n                      <label>Confirm Password</label>\n                    <input type=\"password\" ngModel name=\"cpassword\" class=\"form-control form-control-user\" id=\"exampleRepeatPassword\" placeholder=\"Repeat Password\">\n                  </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-user btn-block\">Register Account</button>\n               <hr>\n              </form>\n              <hr>\n              <div class=\"text-center\">\n                <a class=\"small\" [routerLink]='[\"/login\"]'>Already have an account? Login!</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PostService } from 'src/app/services/post.service';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'app-single-post',\n  templateUrl: './single-post.component.html',\n  styleUrls: ['./single-post.component.css']\n})\nexport class SinglePostComponent implements OnInit {\n  public id: string;\n  picUrl = environment.api_url;\n  postContent = null;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private postService: PostService\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.activatedRoute.snapshot.paramMap.get('id');\n    console.log(this.id)\n    this.postService.getSinglePost(this.id).subscribe((pp)=>{\n      this.postContent = pp;\n      console.log(\"post\",pp)\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\" id=\"singlePost\">\n            <div class=\"card\">\n                <img class=\"card-img-top\" src=\"{{picUrl}}/post/photo/{{postContent._id}}\" class=\"postImg\" alt=\"\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{{postContent.title}}</h5>\n                    <p class=\"card-text\">{{postContent.description}}</p>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"float-left author\">\n                        Posted-{{postContent.createdAt | date:\"dd-m-yyyy\"}}\n                    </div>\n                    <div class=\"float-right author\">\n                        Author-{{postContent.author}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public getLoggedInName = new Subject();\n  private regurl = `${environment.api_url}/register`;\n  private logurl = `${environment.api_url}/login`;\n\n\n\n  constructor(private http: HttpClient) { }\n\n  registerUser =  (data) => {\n    return this.http.post<any>(this.regurl,data);\n  }\n\n  loginUser = (data) => {\n    return this.http.post<any>(this.logurl,data) .pipe(map(user => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      this.getLoggedInName.next(data.email);\n      return user;\n  }));\n  }\n\n  authenticateUser = () => {\n    return !!JSON.parse(localStorage.getItem(\"token\"));\n  }\n\n  getToken = () => {\n    return JSON.parse(localStorage.getItem(\"token\"));\n  }\n\n  getUser = () => {\n    if(localStorage.getItem(\"token\")){\n      const token =JSON.parse(localStorage.getItem(\"token\"));\n      const userId = token.user._id;\n      return this.http.get<any>(`${environment.api_url}/user/${userId}`)\n    }\n  }\n\n  logoutUser = () => {\n    this.getLoggedInName.next(null);\n    return localStorage.removeItem(\"token\");\n  }\n\n\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PostService {\n  private allposts = `${environment.api_url}/posts`\n  private user = `${environment.api_url}/user`\n  private singlePostUrl = `${environment.api_url}/post`\n  private createUrl = `${environment.api_url}/post/create`\n\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllPost = () => {\n    return this.http.get<any>(this.allposts);\n  }\n\n  getAuthor = (userId) => {\n    const newUser = `${this.user}/${userId}`\n    return this.http.get<any>(newUser);\n  }\n\n  getSinglePost = (id) => {\n    const newSinglePost = `${this.singlePostUrl}/${id}`\n    return this.http.get<any>(newSinglePost);\n  }\n\n  createPost = (data,token,userId) =>{\n    const mainUrl = `${this.createUrl}/${userId}`\n    return this.http.post<any>(mainUrl,data);\n  }\n\n  updatePost = (data,userId,postId) =>{\n    const mainUrl = `${environment.api_url}/post/update/${postId}/${userId}`\n    return this.http.put<any>(mainUrl,data);\n  }\n\n  delPost = (userId,postId) => {\n    const mainUrl = `${environment.api_url}/post/delete/${postId}/${userId}`\n    return this.http.delete<any>(mainUrl);\n  }\n\n  getMyPosts = (id) => {\n    return this.http.get<any>(`${environment.api_url}/post/my/${id}`)\n  }\n\n \n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { catchError } from 'rxjs/operators';\nimport {  throwError } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private auth: AuthService,\n    private toast: ToastrService) { }\n  intercept(req,next){\n    \n    if(this.auth.getToken()){\n      const newToken = this.auth.getToken();\n      req = req.clone({\n        setHeaders:{\n          Authorization:`Bearer ${newToken.token}`\n        }\n      });\n    }\n    \n   \n    return next.handle(req).pipe(catchError(err => {\n      if (err.status === 401) {\n          // auto logout if 401 response returned from api\n          this.auth.logoutUser();\n          location.reload(true);\n      }\n      \n      const error = err.error.message || err.statusText;\n      this.toast.error(error);\n      return throwError(error);\n    })\n);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  api_url:\"backend/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}