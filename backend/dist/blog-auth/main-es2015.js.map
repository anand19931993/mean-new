{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/components/layout/footer/footer.component.ts","./src/app/components/layout/footer/footer.component.html","./src/app/components/layout/header/header.component.ts","./src/app/components/layout/header/header.component.html","./src/app/components/layout/top/top.component.ts","./src/app/components/layout/top/top.component.html","./src/app/components/page/edit-page/edit-page.component.ts","./src/app/components/page/edit-page/edit-page.component.html","./src/app/components/page/my-post/my-post.component.ts","./src/app/components/page/my-post/my-post.component.html","./src/app/components/page/post-add/post-add.component.ts","./src/app/components/page/post-add/post-add.component.html","./src/app/components/pages/home/home.component.ts","./src/app/components/pages/home/home.component.html","./src/app/components/pages/login/login.component.ts","./src/app/components/pages/login/login.component.html","./src/app/components/pages/page-not-found/page-not-found.component.ts","./src/app/components/pages/page-not-found/page-not-found.component.html","./src/app/components/pages/posts/posts.component.ts","./src/app/components/pages/posts/posts.component.html","./src/app/components/pages/register/register.component.ts","./src/app/components/pages/register/register.component.html","./src/app/components/pages/single-post/single-post.component.ts","./src/app/components/pages/single-post/single-post.component.html","./src/app/services/auth.service.ts","./src/app/services/post.service.ts","./src/app/services/token-interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { RegisterComponent } from './components/pages/register/register.component';\nimport { HomeComponent } from './components/pages/home/home.component';\nimport { AuthGuard } from './auth.guard';\nimport { PageNotFoundComponent } from './components/pages/page-not-found/page-not-found.component';\nimport { SinglePostComponent } from './components/pages/single-post/single-post.component';\nimport { PostAddComponent } from './components/page/post-add/post-add.component';\nimport { MyPostComponent } from './components/page/my-post/my-post.component';\nimport { EditPageComponent } from './components/page/edit-page/edit-page.component';\n\n\nconst routes: Routes = [\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'register',\n    component:RegisterComponent\n  },\n  {\n    path:'',\n    component:HomeComponent,\n    canActivate:[AuthGuard]\n  },{\n    path:'post/:id',\n    component:SinglePostComponent,\n    canActivate:[AuthGuard]\n  },{\n    path:'create/post',\n    component:PostAddComponent,\n    canActivate:[AuthGuard]\n  },{\n    path:'myposts',\n    component:MyPostComponent,\n    canActivate:[AuthGuard]\n  },{\n    path:'edit-post/:id',\n    component:EditPageComponent,\n    canActivate:[AuthGuard]\n  },\n  {\n    path:'**',\n    component:PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'blog-auth';\n}\n","<div id=\"wrapper\">\n<app-top></app-top>\n<div id=\"content-wrapper\" class=\"d-flex flex-column\">\n<div id=\"content\">\n<app-header></app-header>\n<router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n</div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/layout/header/header.component';\nimport { FooterComponent } from './components/layout/footer/footer.component';\nimport { HomeComponent } from './components/pages/home/home.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { RegisterComponent } from './components/pages/register/register.component';\nimport { PostsComponent } from './components/pages/posts/posts.component';\nimport { PageNotFoundComponent } from './components/pages/page-not-found/page-not-found.component';\nimport { TopComponent } from './components/layout/top/top.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './services/token-interceptor.service';\nimport { SinglePostComponent } from './components/pages/single-post/single-post.component';\nimport { PostAddComponent } from './components/page/post-add/post-add.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { MyPostComponent } from './components/page/my-post/my-post.component';\nimport { EditPageComponent } from './components/page/edit-page/edit-page.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    PostsComponent,\n    PageNotFoundComponent,\n    TopComponent,\n    SinglePostComponent,\n    PostAddComponent,\n    MyPostComponent,\n    EditPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot(),\n    HttpClientModule,\n    FormsModule,\n    FontAwesomeModule\n  ],\n  providers: [AuthGuard,{\n    provide:HTTP_INTERCEPTORS,\n    useClass:TokenInterceptorService,\n    multi:true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n    ) {\n    \n    }\n\n  canActivate(){\n   if(this.auth.authenticateUser()){\n     return true;\n   }else{\n     this.router.navigateByUrl(\"login\");\n     return false;\n   }\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n","<footer class=\"sticky-footer text-dark text-center\">\n    <div class=\"container my-auto\">\n      <div class=\"copyright text-center my-auto\">\n        <span>Copyright &copy; Your Website 2020</span>\n      </div>\n    </div>\n  </footer>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\n@Input()\nexport class HeaderComponent implements OnInit {\n  email=null;\n  currentUser;\n  constructor(\n    private auth: AuthService,\n    private toast: ToastrService,\n    private router: Router,\n  ) {\n    if(auth.getLoggedInName){\n      auth.getLoggedInName.subscribe((name) =>\n      {\n      this.changeName(name);\n     }\n      );\n    }\n    if(auth.getToken()){\n      this.currentUser=auth.getToken().user.email;\n    }\n      \n    \n   \n   }\n   private changeName(name): void {\n    this.currentUser = name;\n    console.log(\"jjjj\",this.currentUser)\n }\n\n  ngOnInit(): void {\n    \n  }\n \n\n\n  async logoutHandle(){\n    try{\n      await this.auth.logoutUser();\n        this.email = null;\n        this.router.navigateByUrl(\"/login\");\n        this.toast.success(\"You have been logged out!\")\n    }\n    catch(err){\n      console.log(err);\n    }\n  }\n\n}\n","    <!-- Topbar -->\n        <nav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\"  *ngIf=\"currentUser\">\n\n          <!-- Sidebar Toggle (Topbar) -->\n          <button id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\">\n            <i class=\"fa fa-bars\"></i>\n          </button>\n\n\n          <!-- Topbar Navbar -->\n          <ul class=\"navbar-nav ml-auto\" >\n            <div class=\"topbar-divider d-none d-sm-block\"></div>\n           \n            <!-- Nav Item - User Information -->\n            <li class=\"nav-item dropdown no-arrow\">\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <span class=\"mr-2 d-none d-lg-inline text-gray-600 small\" >Hello! {{ currentUser  }}</span>\n                <img class=\"img-profile rounded-circle\" src=\"https://source.unsplash.com/QAB-WJcbgJk/60x60\">\n              </a>\n              <!-- Dropdown - User Information -->\n              <div class=\"dropdown-menu dropdown-menu-right shadow animated--grow-in\" aria-labelledby=\"userDropdown\">\n                <a class=\"dropdown-item\" href=\"#\">\n                  <i class=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n                  Profile\n                </a>\n                \n                <div class=\"dropdown-divider\"></div>\n                <a class=\"dropdown-item\" href=\"#\" (click)=\"logoutHandle()\" data-toggle=\"modal\" data-target=\"#logoutModal\">\n                  <i class=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\n                  Logout\n                </a>\n              </div>\n            </li>\n\n          </ul>\n\n        </nav>\n        <!-- End of Topbar -->\n","import { Component, OnInit } from '@angular/core';\nimport { faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-top',\n  templateUrl: './top.component.html',\n  styleUrls: ['./top.component.css']\n})\nexport class TopComponent implements OnInit {\n  currentUser = null;\n  faCaretRight = faCaretRight;\n  constructor(\n    private auth: AuthService\n  ) {\n    if(auth.getLoggedInName){\n      auth.getLoggedInName.subscribe((name) =>\n      {\n      this.changeName(name);\n      console.log(\"name\",name);\n     }\n      );\n    }\n    if(auth.getToken()){\n      this.currentUser=auth.getToken().user.email;\n      console.log(\"emm\",this.currentUser);\n    }\n      \n    \n   \n   }\n   private changeName(name): void {\n    this.currentUser = name;\n    console.log(\"jjjj\",this.currentUser)\n }\n\n  ngOnInit(): void {\n  }\n\n}\n"," <!-- Sidebar -->\n <ul class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\" *ngIf=\"currentUser\">\n\n    <!-- Sidebar - Brand -->\n    <a class=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n      <div class=\"sidebar-brand-icon rotate-n-15\">\n        <i class=\"fas fa-laugh-wink\"></i>\n      </div>\n      <div class=\"sidebar-brand-text mx-3\">BLOG AUTH</div>\n    </a>\n\n    <!-- Divider -->\n    <hr class=\"sidebar-divider my-0\">\n\n    <!-- Nav Item - Dashboard -->\n    <li class=\"nav-item active\">\n      <a class=\"nav-link\" href=\"index.html\">\n        <i class=\"fas fa-fw fa-tachometer-alt\"></i>\n        <span>Dashboard</span></a>\n    </li>\n\n    <!-- Divider -->\n    <hr class=\"sidebar-divider\">\n\n    <!-- Heading -->\n    <div class=\"sidebar-heading\">\n      Interface\n    </div>\n\n    <!-- Nav Item - Pages Collapse Menu -->\n    <li class=\"nav-item\">\n      <a class=\"nav-link collapsed\"  data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\n         <span>Posts</span> <span id=\"sideIcon\"><fa-icon [icon]=\"faCaretRight\"></fa-icon></span>\n      </a>\n      <div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionSidebar\">\n        <div class=\"bg-white py-2 collapse-inner rounded\">\n          <a class=\"collapse-item\" [routerLink]='[\"/create/post\"]' routerLinkActive=\"active\">Add Post</a>\n          <a class=\"collapse-item\" [routerLink]=\"['/myposts']\" routerLinkActive=\"active\">My Posts</a>\n        </div>\n      </div>\n    </li>\n\n   \n    <!-- Divider -->\n    <hr class=\"sidebar-divider d-none d-md-block\">\n\n\n  </ul>\n  <!-- End of Sidebar -->","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { PostService } from 'src/app/services/post.service';\nimport { ActivatedRoute, Router, RouteReuseStrategy } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-page',\n  templateUrl: './edit-page.component.html',\n  styleUrls: ['./edit-page.component.css']\n})\nexport class EditPageComponent implements OnInit {\n  fileToUpload= null;\n  title = null;\n  description = null;\n  userId = null;\n  postId = null;\n\n  constructor(\n    private post: PostService,\n    private auth: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private toast: ToastrService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n      this.userId = this.auth.getToken().user._id;\n      this.postId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.post.getSinglePost(this.postId).subscribe((po)=>{\n      this.title = po.title;\n      this.description = po.description;\n    })\n  }\n  \n  handleFileInput(event) {\n    this.fileToUpload = event.target.files[0];\n }\n\n\n  onSubmit = (f:NgForm) => {\n    let data = f.form.value;\n    const fd = new FormData;\n    if(this.fileToUpload != null){\n      fd.append(\"picture\",this.fileToUpload,this.fileToUpload.name);\n    }\n     if(data.title != ''){\n      fd.append(\"title\",data.title);\n     }\n     if(data.description != ''){\n      fd.append(\"title\",data.description);\n     }\n      \n      this.post.updatePost(fd,this.userId,this.postId).subscribe((pp)=>{\n         this.toast.success(\"Post has been updated!\");\n         this.router.navigateByUrl(\"/myposts\")\n      },(error)=>{\n        return this.toast.error(\"Something went wrong!\")\n      })\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info text-white\">\n                    Add New Post\n                </div>\n                <div class=\"card-body\">\n                    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" enctype=\"multipart/form-data\">\n                        <div class=\"alert alert-warning\" role=\"alert\">\n                            <b>Note:</b> Keep image empty if don't wanna change.\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Picture</label>\n                            <input type=\"file\" id=\"customFile\" name=\"files\"  (change)=\"handleFileInput($event)\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Title</label>\n                            <input type=\"text\" class=\"form-control\" name=\"title\" ngModel placeholder=\"title\" \n                            value=\"{{title}}\"\n                            />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Description</label>\n                            <input type=\"text\" class=\"form-control\" name=\"description\" ngModel placeholder=\"description\" \n                            value=\"{{description}}\"\n                            />\n                        </div>\n                        <div class=\"form-group\">\n                            <button type=\"submit\" class=\"btn btn-primary btn-block\">UPDATE POST</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { environment } from 'src/environments/environment';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-my-post',\n  templateUrl: './my-post.component.html',\n  styleUrls: ['./my-post.component.css']\n})\nexport class MyPostComponent implements OnInit {\nallPosts = [];\nuserId = null;\ncount = 0;\npicUrl = `${environment.api_url}/post/photo/`;\nfaEdit = faEdit\nfaTrash = faTrash\n\n  constructor(\n    private post: PostService,\n    private auth: AuthService,\n    private toast: ToastrService,\n    private router: Router\n  ) {\n    if(this.auth.getToken()){\n      this.userId = this.auth.getToken().user._id;\n      this.post.getMyPosts(this.userId).subscribe((posts)=>{\n         this.allPosts = posts;\n         this.count = this.count+1;\n      })\n    }\n   }\n\n  ngOnInit(): void {\n    \n  }\n\n  delPost = (postIdNew) => {\n    this.post.delPost(this.userId,postIdNew).subscribe((pp)=>{\n     this.toast.success(\"Post has been deleted!\")\n     this.router.navigateByUrl(\"/\")\n    })\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-4\" *ngFor=\"let post of allPosts\" >\n          \n            <div class=\"card\">\n                <div class=\"card-header bg-info text-white\">\n                    {{post.title}}\n                <span style=\"cursor: pointer;margin-left:10px\" routerLink=\"/edit-post/{{post._id}}\" class=\"float-right\"><fa-icon [icon]=\"faEdit\"></fa-icon></span>\n                <span style=\"cursor: pointer;\" (click)=\"delPost(post._id)\" class=\"float-right\"><fa-icon [icon]=\"faTrash\"></fa-icon></span>\n                </div>\n                <div class=\"card-body\"  style=\"cursor: pointer;\"  routerLink=\"/post/{{post._id}}\">\n                    <img src=\"{{picUrl}}{{post._id}}\" class=\"postImg\" />\n                </div>\n                \n                <div class=\"card-footer  bg-info text-white\">\n                    <div class=\"float-left author\">\n                        Posted-{{post.createdAt | date}}\n                    </div>\n                    <div class=\"float-right author\">\n                        Author-Yous\n                    </div>\n                </div>\n            </div>\n              \n        </div>\n        <div class=\"col-md-12 text-center\" *ngIf=\"count == 0\">\n            <div class=\"text-center\">\n                <img class=\"card-img-top\" style=\"width:60%\" src=\"./../../../../assets/img/nopost.png\" alt=\"\">\n            </div>\n        </div>\n       \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NgForm, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-post-add',\n  templateUrl: './post-add.component.html',\n  styleUrls: ['./post-add.component.css']\n})\nexport class PostAddComponent implements OnInit {\n  user = null;\n  fileToUpload= null;\n\n  constructor(\n    private auth: AuthService,\n    private post: PostService,\n    private router: Router,\n    private toast: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.user = this.auth.getToken();\n  }\n\n  handleFileInput(event) {\n   this.fileToUpload = event.target.files[0];\n}\n\n\n  onSubmit = (f:NgForm) => {\n    const token = this.user.token;\n    const userId = this.user.user?._id;\n    let data = f.form.value;\n    const fd = new FormData;\n    fd.append(\"picture\",this.fileToUpload,this.fileToUpload.name);\n    fd.append(\"title\",data.title);\n    fd.append(\"description\",data.description);\n    this.post.createPost(fd,token,userId).subscribe((tt)=>{\n      return this.toast.success(\"Post has been added.\")\n    },(error)=>{\n      return this.toast.error(\"SOmething went wrong!\")\n    })\n\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info text-white\">\n                    Add New Post\n                </div>\n                <div class=\"card-body\">\n                    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" enctype=\"multipart/form-data\">\n                        <div class=\"form-group\">\n                            <label>Picture</label>\n                            <input type=\"file\" id=\"customFile\" name=\"files\"  (change)=\"handleFileInput($event)\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Title</label>\n                            <input type=\"text\" class=\"form-control\" name=\"title\" ngModel placeholder=\"title\" />\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Description</label>\n                            <input type=\"text\" class=\"form-control\" name=\"description\" ngModel placeholder=\"description\" />\n                        </div>\n                        <div class=\"form-group\">\n                            <button type=\"submit\" class=\"btn btn-primary btn-block\">ADD POST</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PostService } from 'src/app/services/post.service';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n    constructor(\n    private router: Router,\n    private post: PostService\n  ) { }\n  allPosts = [];\n  count=0;\n  picUrl = `${environment.api_url}/post/photo/`;\n  ngOnInit(): void {\n    this.post.getAllPost().subscribe((posts)=>{\n      // this.allPosts = posts;\n      posts.map((po)=>{\n        this.post.getAuthor(po.user).pipe(\n          map((res)=>{\n            this.allPosts = posts;\n            this.count = this.count+1;\n          })\n        ).subscribe()\n      })\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-4\" *ngFor=\"let post of allPosts\" >\n          <a routerLink=\"/post/{{post._id}}\">\n            <div class=\"card\">\n                <div class=\"card-header bg-info text-white\">\n                    {{post.title}}\n                </div>\n                <div class=\"card-body\">\n                    <img src=\"{{picUrl}}{{post._id}}\" class=\"postImg\" />\n                </div>\n                <div class=\"card-footer  bg-info text-white\">\n                    <div class=\"float-left author\">\n                        Posted-{{post.createdAt | date}}\n                    </div>\n                    <div class=\"float-right author\">\n                        Author-{{post.author}}\n                    </div>\n                </div>\n            </div>\n               </a>\n\n              \n        </div>\n        <div class=\"col-md-12 text-center\" *ngIf=\"count == 0\">\n            <div class=\"text-center\">\n                <img class=\"card-img-top\" style=\"width:60%\" src=\"./../../../../assets/img/nopost.png\" alt=\"\">\n            </div>\n        </div>\n       \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private auth: AuthService,\n    private toast: ToastrService\n  ) {\n    if(this.auth.authenticateUser()){\n       this.router.navigate[\"/\"];\n    }\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit = (f:NgForm) =>{\n    const {email,password} = f.form.value;\n    if(email == '' || password == ''){\n      return this.toast.error(\"Fields cannot be empty!\")\n    }\n    this.auth.loginUser(f.form.value).subscribe((user)=>{\n      localStorage.setItem(\"token\",JSON.stringify(user));\n      f.resetForm();\n      this.router.navigate([\"\"]);\n      this.toast.success(\"Login successful!\");\n    },(error)=>{\n      console.log(error);\n      this.toast.error(error.error.error);\n    })\n  }\n\n}\n","<div class=\"container\">\n\n    <!-- Outer Row -->\n    <div class=\"row justify-content-center\">\n\n      <div class=\"col-xl-10 col-lg-12 col-md-9\">\n\n        <div class=\"card o-hidden border-0 shadow-lg my-5\">\n          <div class=\"card-body p-0\">\n            <!-- Nested Row within Card Body -->\n            <div class=\"row\">\n              <div class=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n              <div class=\"col-lg-6\">\n                <div class=\"p-5\">\n                  <div class=\"text-center\">\n                    <h1 class=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\n                  </div>\n                  <form class=\"user\" (ngSubmit)=\"onSubmit(f)\" #f=ngForm>\n                    <div class=\"form-group\">\n                      <input type=\"email\" ngModel name=\"email\" class=\"form-control form-control-user\" id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email Address...\">\n                    </div>\n                    <div class=\"form-group\">\n                      <input type=\"password\" ngModel name=\"password\" class=\"form-control form-control-user\" id=\"exampleInputPassword\" placeholder=\"Password\">\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary btn-user btn-block\">\n                      Login\n                    </button>\n                   \n                  </form>\n                  <hr>\n                  <div class=\"text-center\">\n                    <a class=\"small\"  [routerLink]='[\"/register\"]'>Create an Account!</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>posts works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgForm } from '@angular/forms';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private toast: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit = (f:NgForm) =>{\n    const {password,cpassword} = f.form.value;\n    if(password !== cpassword){\n       return this.toast.error(\"Password does not match with confirm password!\");\n    } \n\n    if(password.length < 6 ){\n      return this.toast.error(\"Password should be atleast 6 characters long!\");\n    }\n\n    this.auth.registerUser(f.form.value).subscribe((user)=>{\n      return this.toast.success(`Account of ${user.name} has been created.`)\n    },(error)=>{\n      f.resetForm();\n      return this.toast.error(error.error.error)\n\n    }\n    )\n\n  }\n\n}\n","<div class=\"container\">\n\n    <div class=\"card o-hidden border-0 shadow-lg my-5\">\n      <div class=\"card-body p-0\">\n        <!-- Nested Row within Card Body -->\n        <div class=\"row\">\n          <div class=\"col-lg-5 d-none d-lg-block bg-register-image\"></div>\n          <div class=\"col-lg-7\">\n            <div class=\"p-5\">\n              <div class=\"text-center\">\n                <h1 class=\"h4 text-gray-900 mb-4\">Create an Account!</h1>\n              </div>\n              <form class=\"user\" (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n                      <label>Full Name</label>\n                    <input type=\"text\" ngModel name=\"name\" class=\"form-control form-control-user\" id=\"exampleFirstName\" placeholder=\"Full Name\">\n                  </div>\n                  <div class=\"col-sm-6\">\n                      <label>Date Of Birth</label>\n                    <input type=\"date\" ngModel name=\"DOB\" class=\"form-control form-control-user\" id=\"exampleLastName\" placeholder=\"DOB\">\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Email Address</label>\n                  <input type=\"email\" ngModel name=\"email\" class=\"form-control form-control-user\" id=\"exampleInputEmail\" placeholder=\"Email Address\">\n                </div>\n                <div class=\"form-group row\">\n                  <div class=\"col-sm-6 mb-3 mb-sm-0\">\n                      <label>Password</label>\n                    <input type=\"password\" ngModel name=\"password\" class=\"form-control form-control-user\" id=\"exampleInputPassword\" placeholder=\"Password\">\n                  </div>\n                  <div class=\"col-sm-6\">\n                      <label>Confirm Password</label>\n                    <input type=\"password\" ngModel name=\"cpassword\" class=\"form-control form-control-user\" id=\"exampleRepeatPassword\" placeholder=\"Repeat Password\">\n                  </div>\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary btn-user btn-block\">Register Account</button>\n               <hr>\n              </form>\n              <hr>\n              <div class=\"text-center\">\n                <a class=\"small\" [routerLink]='[\"/login\"]'>Already have an account? Login!</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PostService } from 'src/app/services/post.service';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'app-single-post',\n  templateUrl: './single-post.component.html',\n  styleUrls: ['./single-post.component.css']\n})\nexport class SinglePostComponent implements OnInit {\n  public id: string;\n  picUrl = environment.api_url;\n  postContent = null;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private postService: PostService\n  ) { }\n\n  ngOnInit(): void {\n    this.id = this.activatedRoute.snapshot.paramMap.get('id');\n    console.log(this.id)\n    this.postService.getSinglePost(this.id).subscribe((pp)=>{\n      this.postContent = pp;\n      console.log(\"post\",pp)\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\" id=\"singlePost\">\n            <div class=\"card\">\n                <img class=\"card-img-top\" src=\"{{picUrl}}/post/photo/{{postContent._id}}\" class=\"postImg\" alt=\"\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{{postContent.title}}</h5>\n                    <p class=\"card-text\">{{postContent.description}}</p>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"float-left author\">\n                        Posted-{{postContent.createdAt | date:\"dd-m-yyyy\"}}\n                    </div>\n                    <div class=\"float-right author\">\n                        Author-{{postContent.author}}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public getLoggedInName = new Subject();\n  private regurl = `${environment.api_url}/register`;\n  private logurl = `${environment.api_url}/login`;\n\n\n\n  constructor(private http: HttpClient) { }\n\n  registerUser =  (data) => {\n    return this.http.post<any>(this.regurl,data);\n  }\n\n  loginUser = (data) => {\n    return this.http.post<any>(this.logurl,data) .pipe(map(user => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      this.getLoggedInName.next(data.email);\n      return user;\n  }));\n  }\n\n  authenticateUser = () => {\n    return !!JSON.parse(localStorage.getItem(\"token\"));\n  }\n\n  getToken = () => {\n    return JSON.parse(localStorage.getItem(\"token\"));\n  }\n\n  getUser = () => {\n    if(localStorage.getItem(\"token\")){\n      const token =JSON.parse(localStorage.getItem(\"token\"));\n      const userId = token.user._id;\n      return this.http.get<any>(`${environment.api_url}/user/${userId}`)\n    }\n  }\n\n  logoutUser = () => {\n    this.getLoggedInName.next(null);\n    return localStorage.removeItem(\"token\");\n  }\n\n\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PostService {\n  private allposts = `${environment.api_url}/posts`\n  private user = `${environment.api_url}/user`\n  private singlePostUrl = `${environment.api_url}/post`\n  private createUrl = `${environment.api_url}/post/create`\n\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllPost = () => {\n    return this.http.get<any>(this.allposts);\n  }\n\n  getAuthor = (userId) => {\n    const newUser = `${this.user}/${userId}`\n    return this.http.get<any>(newUser);\n  }\n\n  getSinglePost = (id) => {\n    const newSinglePost = `${this.singlePostUrl}/${id}`\n    return this.http.get<any>(newSinglePost);\n  }\n\n  createPost = (data,token,userId) =>{\n    const mainUrl = `${this.createUrl}/${userId}`\n    return this.http.post<any>(mainUrl,data);\n  }\n\n  updatePost = (data,userId,postId) =>{\n    const mainUrl = `${environment.api_url}/post/update/${postId}/${userId}`\n    return this.http.put<any>(mainUrl,data);\n  }\n\n  delPost = (userId,postId) => {\n    const mainUrl = `${environment.api_url}/post/delete/${postId}/${userId}`\n    return this.http.delete<any>(mainUrl);\n  }\n\n  getMyPosts = (id) => {\n    return this.http.get<any>(`${environment.api_url}/post/my/${id}`)\n  }\n\n \n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\nimport { catchError } from 'rxjs/operators';\nimport {  throwError } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private auth: AuthService,\n    private toast: ToastrService) { }\n  intercept(req,next){\n    \n    if(this.auth.getToken()){\n      const newToken = this.auth.getToken();\n      req = req.clone({\n        setHeaders:{\n          Authorization:`Bearer ${newToken.token}`\n        }\n      });\n    }\n    \n   \n    return next.handle(req).pipe(catchError(err => {\n      if (err.status === 401) {\n          // auto logout if 401 response returned from api\n          this.auth.logoutUser();\n          location.reload(true);\n      }\n      \n      const error = err.error.message || err.statusText;\n      this.toast.error(error);\n      return throwError(error);\n    })\n);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  api_url:\"backend/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}